<!-- event 4104 it's for Powershell 4 or above
Copy below to your client's ossec.conf file to enable powershell audit:
<localfile>
<location>Microsoft-Windows-PowerShell/Operational</location>
<log_format>eventchannel</log_format>
</localfile>

PowerShell module logging can be configured to record all activities of each PowerShell module, covering single PowerShell commands, imported modules, and remote management. The module logging function can be enabled by configuring GPO settings.
Alternately, setting the following registry values will have the same effect:
   - HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging → EnableModuleLogging = 1
   - HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging \ModuleNames → * = *

-->
<group name="powershell">
<rule id="110300" level="0">
    <if_sid>60000</if_sid>
    <field name="win.system.channel">^Microsoft-Windows-PowerShell/Operational$</field>
    <options>no_full_log</options>
    <description>Group of Windows rules for the PowerShell channel</description>
	<group> MITRE ATT&CK, </group>
  </rule>
<rule id="110301" level="0">
    <if_sid>100300</if_sid>
    <field name="win.system.severityValue">^INFORMATION$</field>
    <description>Windows PowerShells informational event</description>
    <options>no_full_log</options>
	<group> MITRE ATT&CK, </group>
  </rule>
  <rule id="110302" level="0">
    <if_sid>100300</if_sid>
    <field name="win.system.severityValue">^WARNING$</field>
    <description>Windows PowerShell warning event</description>
    <options>no_full_log</options>
	<group> MITRE ATT&CK, </group>
  </rule>
  <rule id="110303" level="5">
    <if_sid>100300</if_sid>
    <field name="win.system.severityValue">^ERROR$</field>
    <description>Windows PowerShell error event</description>
    <options>no_full_log</options>
	<group> MITRE ATT&CK, </group>
  </rule>
<rule id="110304" level="10">
  <if_sid>100302</if_sid>
  <field name="win.system.eventID">^4104$</field>
  <field name="win.eventdata.ScriptBlockText">(\.*)Get-(\.*)</field>
  <description>Mitre ATT&CK T1087, Discovery, Account Discovery, Powershell</description>
  <options>no_full_log</options>
  <group> MITRE ATT&CK, </group>
</rule>
<rule id="110305" level="12">
  <if_sid>100302</if_sid>
  <field name="win.system.eventID">^4104$</field>
  <field name="win.eventdata.ScriptBlockText">(\.*)iex|IEX(\.*)</field>
  <description>Mitre ATT&CK T1086, Execution, Powershell, invoke execution call</description>
  <options>no_full_log</options>
  <group> MITRE ATT&CK, </group>
</rule>
<!-- event 4103 must be enabled via GPO and must be noisy -->
<rule id="110306" level="12">
  <if_sid>100301</if_sid>
  <field name="win.system.eventID">^4103$</field>
  <field name="win.eventdata.Payload">(\.*)mimikatz(\.*)</field>
  <description>Mitre ATT&CK T1086, Execution, PowerShell, Mimikatz powershell execution</description>
  <options>no_full_log</options>
  <group> MITRE ATT&CK, </group>
</rule>
<rule id="110307" level="12">
  <if_sid>100301</if_sid>
  <field name="win.system.eventID">^4103$</field>
  <field name="win.eventdata.Payload">(\.*)-enc(\.*)</field>
  <description>Mitre ATT&CK T1086, Execution, PowerShell, Encripted powershell command</description>
  <options>no_full_log</options>
  <group> MITRE ATT&CK, </group>
</rule>

</group>